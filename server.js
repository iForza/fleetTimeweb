const express = require('express');
const path = require('path');
const cors = require('cors');
const compression = require('compression');

// ะะฝะธัะธะฐะปะธะทะฐัะธั Express ะฟัะธะปะพะถะตะฝะธั
const app = express();
const PORT = process.env.PORT || 3000;

// Middleware ะดะปั ะปะพะณะธัะพะฒะฐะฝะธั
const morgan = require('morgan');
app.use(morgan(':method :url :status :res[content-length] - :response-time ms'));

// Middleware ะฑะตะทะพะฟะฐัะฝะพััะธ
app.use((req, res, next) => {
    res.setHeader('X-Content-Type-Options', 'nosniff');
    res.setHeader('X-Frame-Options', 'DENY');
    res.setHeader('X-XSS-Protection', '1; mode=block');
    res.setHeader('Referrer-Policy', 'strict-origin-when-cross-origin');
    next();
});

// ะกะถะฐัะธะต gzip
app.use(compression());

// CORS ะดะปั API ะทะฐะฟัะพัะพะฒ
app.use(cors({
    origin: true,
    credentials: true
}));

// ะะฑัะปัะถะธะฒะฐะฝะธะต ััะฐัะธัะตัะบะธั ัะฐะนะปะพะฒ
app.use(express.static(path.join(__dirname, '.'), {
    maxAge: '1d', // ะััะธัะพะฒะฐะฝะธะต ะฝะฐ 1 ะดะตะฝั
    etag: true
}));

// ะัะฝะพะฒะฝะพะน ะผะฐััััั
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});

// Health check ะดะปั ะผะพะฝะธัะพัะธะฝะณะฐ
app.get('/health', (req, res) => {
    res.json({
        status: 'ok',
        timestamp: new Date().toISOString(),
        uptime: process.uptime(),
        environment: process.env.NODE_ENV || 'development',
        version: require('./package.json').version
    });
});

// API ะดะปั ะฟะพะปััะตะฝะธั ะธะฝัะพัะผะฐัะธะธ ะพ ะฟัะธะปะพะถะตะฝะธะธ
app.get('/api/info', (req, res) => {
    res.json({
        name: 'Farm Monitor Pro',
        version: require('./package.json').version,
        description: 'ะัะพัะตััะธะพะฝะฐะปัะฝะฐั ัะธััะตะผะฐ ะผะพะฝะธัะพัะธะฝะณะฐ ัะตะปััะบะพัะพะทัะนััะฒะตะฝะฝะพะน ัะตัะฝะธะบะธ',
        features: [
            'ะฃะผะฝะพะต ะฟะตัะตะบะปััะตะฝะธะต ะผะตะถะดั Esri ะธ ะดะตะผะพ ะบะฐััะฐะผะธ',
            'ะะฝัะตัะฐะบัะธะฒะฝะฐั ะบะฐััะฐ ั ะผะฐัะบะตัะฐะผะธ ัะตัะฝะธะบะธ',
            'ะัะฐัะธะบะธ ะฐะฝะฐะปะธัะธะบะธ ะฒ ัะตะฐะปัะฝะพะผ ะฒัะตะผะตะฝะธ',
            'MQTT ะธะฝัะตะณัะฐัะธั ะดะปั ESP32 ะผะพะดัะปะตะน',
            'ะะพะฑะธะปัะฝะฐั ะฐะดะฐะฟัะฐัะธั'
        ]
    });
});

// 404 ะพะฑัะฐะฑะพััะธะบ
app.use('*', (req, res) => {
    res.status(404).sendFile(path.join(__dirname, 'index.html'));
});

// ะะฑัะฐะฑะพััะธะบ ะพัะธะฑะพะบ
app.use((err, req, res, next) => {
    console.error('ะัะธะฑะบะฐ ัะตัะฒะตัะฐ:', err);
    res.status(500).json({
        error: 'ะะฝัััะตะฝะฝัั ะพัะธะฑะบะฐ ัะตัะฒะตัะฐ',
        message: process.env.NODE_ENV === 'development' ? err.message : 'ะงัะพ-ัะพ ะฟะพัะปะพ ะฝะต ัะฐะบ'
    });
});

// Graceful shutdown
process.on('SIGTERM', () => {
    console.log('๐ก ะะพะปััะตะฝ ัะธะณะฝะฐะป SIGTERM, ะทะฐะฒะตััะตะฝะธะต ัะฐะฑะพัั ัะตัะฒะตัะฐ...');
    server.close(() => {
        console.log('โ ะกะตัะฒะตั ะทะฐะบััั');
        process.exit(0);
    });
});

process.on('SIGINT', () => {
    console.log('๐ก ะะพะปััะตะฝ ัะธะณะฝะฐะป SIGINT, ะทะฐะฒะตััะตะฝะธะต ัะฐะฑะพัั ัะตัะฒะตัะฐ...');
    server.close(() => {
        console.log('โ ะกะตัะฒะตั ะทะฐะบััั');
        process.exit(0);
    });
});

// ะะฐะฟััะบ ัะตัะฒะตัะฐ
const server = app.listen(PORT, () => {
    console.log(`๐ Farm Monitor Pro ัะตัะฒะตั ะทะฐะฟััะตะฝ ะฝะฐ ะฟะพััั ${PORT}`);
    console.log(`๐ ะกะฐะนั ะดะพัััะฟะตะฝ ะฟะพ ะฐะดัะตัั: http://localhost:${PORT}`);
    console.log(`๐ Health check: http://localhost:${PORT}/health`);
    console.log(`๐ฑ ะัะธะปะพะถะตะฝะธะต ะณะพัะพะฒะพ ะบ ัะฐะฑะพัะต!`);
});

module.exports = app; 